{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import movieApi from \"../../common/apis/movieApi\";\n// import { APIKEY } from \"../../common/apis/movieApiKey\";\nimport axios from \"axios\";\nconst MOVIE_URL = \"https://www.omdbapi.com/?i=tt3896198&apikey=55944848\";\nexport const fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", async () => {\n  try {} catch (error) {}\n  const response = await axios.get(MOVIE_URL);\n  return response.data;\n});\nconst initialState = {\n  movies: {}\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, {\n      payload\n    }) => {\n      state.movies = payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchAsyncMovies.pending, () => {\n      console.log(\"Pending\");\n    }).addCase(fetchAsyncMovies.fulfilled, (state, action) => {\n      state.movies = action.payload;\n      console.log(state.movies);\n    }).addCase(fetchAsyncMovies.rejected, () => {\n      console.log(\"Rejected\");\n    });\n  }\n});\nexport const {\n  addMovies\n} = moviesSlice.actions;\nexport const getAllMovies = state => state.movies;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","MOVIE_URL","fetchAsyncMovies","error","response","get","data","initialState","movies","moviesSlice","name","reducers","addMovies","state","payload","extraReducers","builder","addCase","pending","console","log","fulfilled","action","rejected","actions","getAllMovies","reducer"],"sources":["/home/edlawitg/Documents/Moive_app with reduxtoolkit/movieapp/src/features/Movies/movieSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import movieApi from \"../../common/apis/movieApi\";\n// import { APIKEY } from \"../../common/apis/movieApiKey\";\nimport axios from \"axios\";\nconst MOVIE_URL = \"https://www.omdbapi.com/?i=tt3896198&apikey=55944848\";\nexport const fetchAsyncMovies = createAsyncThunk(\n  \"movies/fetchAsyncMovies\",\n  async () => {\n    try {\n      \n    } catch (error) {\n      \n    }\n    const response = await axios.get(MOVIE_URL);\n    return response.data;\n  }\n);\nconst initialState = {\n  movies: {},\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, { payload }) => {\n      state.movies = payload;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchAsyncMovies.pending, () => {\n        console.log(\"Pending\");\n      })\n      .addCase(fetchAsyncMovies.fulfilled, (state, action) => {\n        state.movies = action.payload;\n        console.log(state.movies);\n      })\n      .addCase(fetchAsyncMovies.rejected, () => {\n        console.log(\"Rejected\");\n      });\n  },\n});\nexport const { addMovies } = moviesSlice.actions;\nexport const getAllMovies = (state) => state.movies;\nexport default moviesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE;AACA;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,SAAS,GAAG,sDAAsD;AACxE,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAC9C,yBAAyB,EACzB,YAAY;EACV,IAAI,CAEJ,CAAC,CAAC,OAAOK,KAAK,EAAE,CAEhB;EACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,SAAS,CAAC;EAC3C,OAAOG,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AACD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC;AACX,CAAC;AACD,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACjCD,KAAK,CAACL,MAAM,GAAGM,OAAO;IACxB;EACF,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACf,gBAAgB,CAACgB,OAAO,EAAE,MAAM;MACvCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CACDH,OAAO,CAACf,gBAAgB,CAACmB,SAAS,EAAE,CAACR,KAAK,EAAES,MAAM,KAAK;MACtDT,KAAK,CAACL,MAAM,GAAGc,MAAM,CAACR,OAAO;MAC7BK,OAAO,CAACC,GAAG,CAACP,KAAK,CAACL,MAAM,CAAC;IAC3B,CAAC,CAAC,CACDS,OAAO,CAACf,gBAAgB,CAACqB,QAAQ,EAAE,MAAM;MACxCJ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAER;AAAU,CAAC,GAAGH,WAAW,CAACe,OAAO;AAChD,OAAO,MAAMC,YAAY,GAAIZ,KAAK,IAAKA,KAAK,CAACL,MAAM;AACnD,eAAeC,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}