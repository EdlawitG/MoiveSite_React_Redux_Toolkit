{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport movieApi from \"../../common/apis/movieApi\";\nimport { APIKEY } from \"../../common/apis/movieApiKey\";\nexport const fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", async () => {\n  var movieText = \"Harry\";\n  const response = await movieApi.get(`?apiKey=${APIKEY}&s${movieText}&type=movie`);\n  return response.data;\n});\nconst initialState = {\n  movies: {}\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, {\n      payload\n    }) => {\n      state.movies = payload;\n    }\n  },\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncMovies.fulfilled]: (state, {\n      payload\n    }) => {\n      console.log(\"Fetched Successfully!\");\n      return {\n        ...state,\n        movies: payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log(\"Rejected!\");\n    }\n  }\n});\nexport const {\n  addMovies\n} = moviesSlice.actions;\nexport const getAllMovies = state => state.movies.movies;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","movieApi","APIKEY","fetchAsyncMovies","movieText","response","get","data","initialState","movies","moviesSlice","name","reducers","addMovies","state","payload","extraReducers","pending","console","log","fulfilled","rejected","actions","getAllMovies","reducer"],"sources":["/home/edlawitg/Documents/Moive_app with reduxtoolkit/movieapp/src/features/Movies/movieSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport movieApi from \"../../common/apis/movieApi\";\nimport { APIKEY } from \"../../common/apis/movieApiKey\";\nexport const fetchAsyncMovies = createAsyncThunk(\n  \"movies/fetchAsyncMovies\",\n  async () => {\n    var movieText = \"Harry\";\n    const response = await movieApi.get(\n      `?apiKey=${APIKEY}&s${movieText}&type=movie`\n    );\n    return response.data;\n  }\n);\nconst initialState = {\n  movies: {},\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, { payload }) => {\n      state.movies = payload;\n    },\n  },\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\n      console.log(\"Fetched Successfully!\");\n      return { ...state, movies: payload };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log(\"Rejected!\");\n    },\n  },\n});\nexport const { addMovies } = moviesSlice.actions;\nexport const getAllMovies = (state) => state.movies.movies;\nexport default moviesSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,MAAM,QAAQ,+BAA+B;AACtD,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAC9C,yBAAyB,EACzB,YAAY;EACV,IAAIK,SAAS,GAAG,OAAO;EACvB,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CAChC,WAAUJ,MAAO,KAAIE,SAAU,aAClC,CAAC;EACD,OAAOC,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AACD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC;AACX,CAAC;AACD,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACjCD,KAAK,CAACL,MAAM,GAAGM,OAAO;IACxB;EACF,CAAC;EACDC,aAAa,EAAE;IACb,CAACb,gBAAgB,CAACc,OAAO,GAAG,MAAM;MAChCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;IACD,CAAChB,gBAAgB,CAACiB,SAAS,GAAG,CAACN,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACpDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,OAAO;QAAE,GAAGL,KAAK;QAAEL,MAAM,EAAEM;MAAQ,CAAC;IACtC,CAAC;IACD,CAACZ,gBAAgB,CAACkB,QAAQ,GAAG,MAAM;MACjCH,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEN;AAAU,CAAC,GAAGH,WAAW,CAACY,OAAO;AAChD,OAAO,MAAMC,YAAY,GAAIT,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACA,MAAM;AAC1D,eAAeC,WAAW,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}