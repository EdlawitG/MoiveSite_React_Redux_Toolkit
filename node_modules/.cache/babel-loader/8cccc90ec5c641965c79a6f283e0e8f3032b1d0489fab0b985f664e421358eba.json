{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport movieApi from \"../../common/apis/movieApi\";\nimport { APIKEY } from \"../../common/apis/movieApiKey\";\nimport axios from \"axios\";\n// import axios from \"axios\";\n// const MOVIE_URL = \"https://www.omdbapi.com/?i=tt3896198&apikey=55944848\";\nexport const fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", async term => {\n  try {\n    const movieText = \"Harry\";\n    const response = await movieApi.get(`&apiKey=${APIKEY}&s=${movieText}&type=movie`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const fetchAsyncShow = createAsyncThunk(\"shows/fetchAsyncShow\", async () => {\n  try {\n    const seriesText = \"Friends\";\n    const response = await movieApi.get(`&apiKey=${APIKEY}&s=${seriesText}&type=series`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk(\"movies/fetchAsyncMovieOrShowDetail\", async id => {\n  try {\n    const response = await axios.get(`https://www.omdbapi.com/?apiKey=${APIKEY}&i=${id}&plot=full`);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nconst initialState = {\n  movies: {},\n  shows: {},\n  selectedMovieOrShow: {}\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    removeSelectedMoiveorShow: state => {\n      state.selectedMovieOrShow = {};\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchAsyncMovies.pending, () => {\n      console.log(\"Pending\");\n    }).addCase(fetchAsyncMovies.fulfilled, (state, action) => {\n      state.movies = action.payload;\n      console.log(\"fulfuilled\");\n    }).addCase(fetchAsyncMovies.rejected, () => {\n      console.log(\"Rejected\");\n    }).addCase(fetchAsyncShow.fulfilled, (state, action) => {\n      state.shows = action.payload;\n      console.log(\"fulfuilled\");\n    }).addCase(fetchAsyncMovieOrShowDetail.fulfilled, (state, action) => {\n      state.selectedMovieOrShow = action.payload;\n      console.log(\"fulfuilled\");\n    });\n  }\n});\nexport const {\n  removeSelectedMoiveorShow\n} = moviesSlice.actions;\nexport const getAllMovies = state => state.movie.movies;\nexport const getAllShows = state => state.movie.shows;\nexport const getDetail = state => state.movie.selectedMovieOrShow;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","movieApi","APIKEY","axios","fetchAsyncMovies","term","movieText","response","get","data","error","message","fetchAsyncShow","seriesText","fetchAsyncMovieOrShowDetail","id","initialState","movies","shows","selectedMovieOrShow","moviesSlice","name","reducers","removeSelectedMoiveorShow","state","extraReducers","builder","addCase","pending","console","log","fulfilled","action","payload","rejected","actions","getAllMovies","movie","getAllShows","getDetail","reducer"],"sources":["/home/edlawitg/Documents/Moive_app with reduxtoolkit/movieapp/src/features/Movies/movieSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport movieApi from \"../../common/apis/movieApi\";\nimport { APIKEY } from \"../../common/apis/movieApiKey\";\nimport axios from \"axios\";\n// import axios from \"axios\";\n// const MOVIE_URL = \"https://www.omdbapi.com/?i=tt3896198&apikey=55944848\";\nexport const fetchAsyncMovies = createAsyncThunk(\n  \"movies/fetchAsyncMovies\",\n  async (term) => {\n    try {\n      const movieText = \"Harry\";\n      const response = await movieApi.get(\n        `&apiKey=${APIKEY}&s=${movieText}&type=movie`\n      );\n      return response.data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n);\nexport const fetchAsyncShow = createAsyncThunk(\n  \"shows/fetchAsyncShow\",\n  async () => {\n    try {\n      const seriesText = \"Friends\";\n      const response = await movieApi.get(\n        `&apiKey=${APIKEY}&s=${seriesText}&type=series`\n      );\n      return response.data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n);\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk(\n  \"movies/fetchAsyncMovieOrShowDetail\",\n  async (id) => {\n    try {\n      const response = await axios.get(\n        `https://www.omdbapi.com/?apiKey=${APIKEY}&i=${id}&plot=full`\n      );\n      return response.data;\n    } catch (error) {\n      return error.message;\n    }\n  }\n);\nconst initialState = {\n  movies: {},\n  shows: {},\n  selectedMovieOrShow: {},\n};\nconst moviesSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    removeSelectedMoiveorShow: (state) => {\n      state.selectedMovieOrShow = {};\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchAsyncMovies.pending, () => {\n        console.log(\"Pending\");\n      })\n      .addCase(fetchAsyncMovies.fulfilled, (state, action) => {\n        state.movies = action.payload;\n        console.log(\"fulfuilled\");\n      })\n      .addCase(fetchAsyncMovies.rejected, () => {\n        console.log(\"Rejected\");\n      })\n      .addCase(fetchAsyncShow.fulfilled, (state, action) => {\n        state.shows = action.payload;\n        console.log(\"fulfuilled\");\n      })\n      .addCase(fetchAsyncMovieOrShowDetail.fulfilled, (state, action) => {\n        state.selectedMovieOrShow = action.payload;\n        console.log(\"fulfuilled\");\n      });\n  },\n});\n\nexport const { removeSelectedMoiveorShow } = moviesSlice.actions;\nexport const getAllMovies = (state) => state.movie.movies;\nexport const getAllShows = (state) => state.movie.shows;\nexport const getDetail = (state) => state.movie.selectedMovieOrShow;\nexport default moviesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}